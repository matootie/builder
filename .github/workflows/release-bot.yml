name: Release the chatbot

# Only run on pushes to trunk and on changes to the chatbot
# source directory.
on:
  push:
    branches:
    - trunk
    paths:
    - bot/**

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository in the CI worker.
    - name: Checkout repository
      uses: actions/checkout@v2

      # Set up Python.
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10

      # Check if we have a valid installation of Poetry in cache.
    - name: Cache Poetry
      id: cache-poetry
      uses: actions/cache@v2
      with:
        path: ~/.poetry
        key: ${{ matrix.os }}-poetry

      # Install Poetry if not found in cache.
    - name: Install Poetry
      if: steps.cache-poetry.outputs.cache-hit != "true"
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

      # Add Poetry to the runner PATH.
    - name: Add Poetry to PATH
      run: |
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      # Validate the pyproject.toml file.
    - name: Check pyproject.toml validity
      run: poetry check --no-interaction

      # Build the project.
    - name: Build the project
      run: poetry build

      # Log in to the Heroku platform.
    - name: Log in to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login

      # Build and push the image.
    - name: Build and push image
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:push worker --app discord-builder

      # Trigger a release on Heroku.
    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release worker --app discord-builder
